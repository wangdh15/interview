"""
题目：二进制中1的个数
    请实现一个函数，输入一个整数，输出该数二进制表示中1的个数
思路：比较直接的思路是判断整数二进制最后一位是否是1，然后将该整数向右移位；如此往复，直至该整数为0；
但是这样有可能会出现死循环；例如，整数二进制为(100)，由于最高位是1，因此三次移位后是111，将会出现死循环
避免出现死循环的方法是：设置变量为flag，每次做&运算；但是结合python，另外一种方法是：只有负数才会才会出现死循环，那么遇到负数，我们只需要将其最高位1变为0，
这样原本负数就变成了正数，此时我们便可按照上述方法进行处理，只需注意最后+1即可
"""
class Solution:
    def NumberOf1(self, n):
        return bin(n).replace("0b","").count("1") if n>=0 else bin(2**32+n).replace("0b","").count("1")

